
import { Outlet, Navigate } from 'react-router-dom';

import { useAuth } from '../userContext';

import { useAuthData } from "../../context/AuthContext";


const PrivateRoute = () => {
  const { isAuthenticated } = useAuth();
  return isAuthenticated ? <Outlet /> : <Navigate to="/login" replace />;
};

export default PrivateRoute;

//********************* */

// import { PropsWithChildren, useEffect } from 'react';
// import { useNavigate } from 'react-router-dom';

// import { useAuth } from './AuthProvider';

// type ProtectedRouteProps = PropsWithChildren;

// export default function ProtectedRoute({ children }: ProtectedRouteProps) {
//   const user = useAuth();
//   const navigate = useNavigate();

//   useEffect(() => {
//     if (user === null) {
//       navigate('/signin', { replace: true });
//     }
//   }, [navigate, user]);

//   return children;
// }




  // return userIsLoggedIn ? <Outlet /> : navigateTo('/login', { replace: true });

  // return (
  //   <>{userIsLoggedIn ? <Outlet /> : navigateTo('/login', { replace: true })}</>
  // );
